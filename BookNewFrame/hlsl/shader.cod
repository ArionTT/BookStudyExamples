//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer ConstanceBuffer : register(b0)
{
    float4x4 world;                     // Offset:    0, size:   64
    float4x4 view;                      // Offset:   64, size:   64
    float4x4 projection;                // Offset:  128, size:   64
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 ColorTech
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer ConstanceBuffer
                // {
                //
                //   float4x4 world;                    // Offset:    0 Size:    64
                //   float4x4 view;                     // Offset:   64 Size:    64
                //   float4x4 projection;               // Offset:  128 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ConstanceBuffer                   cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyzw        0     NONE  float   xyzw
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyz         2     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyzw
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                
                #line 28 "D:\HLSL Project\IntroductionToD3D11\BookStudyExamples\BookNewFrame\hlsl\shader.fx"
                dp4 r0.x, v0.xyzw, cb0[0].xyzw  // o<0:NaN:Inf>
                dp4 r0.y, v0.xyzw, cb0[1].xyzw  // o<1:NaN:Inf>
                dp4 r0.z, v0.xyzw, cb0[2].xyzw  // o<2:NaN:Inf>
                dp4 r0.w, v0.xyzw, cb0[3].xyzw  // o<3:NaN:Inf>
                mov r1.x, r0.x  // o<7:NaN:Inf>
                mov r1.y, r0.y  // o<8:NaN:Inf>
                mov r1.z, r0.z  // o<9:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[0].xyzx  // o<4:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[1].xyzx  // o<5:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[2].xyzx  // o<6:NaN:Inf>
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // o<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // o<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // o<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // o<3:NaN:Inf>
                dp4 r0.x, r3.xyzw, cb0[8].xyzw  // o<0:NaN:Inf>
                dp4 r0.y, r3.xyzw, cb0[9].xyzw  // o<1:NaN:Inf>
                dp4 r0.z, r3.xyzw, cb0[10].xyzw  // o<2:NaN:Inf>
                dp4 r0.w, r3.xyzw, cb0[11].xyzw  // o<3:NaN:Inf>
                mov o0.xyzw, r0.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r2.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r1.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 22 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xyz         1     NONE  float       
                // COLOR                    0   xyz         2     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                
                #line 43 "D:\HLSL Project\IntroductionToD3D11\BookStudyExamples\BookNewFrame\hlsl\shader.fx"
                mov o0.xyz, v2.xyzx  // PS<0,1,2>
                mov o0.w, l(1.000000)  // PS<3: 1f>
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

}

